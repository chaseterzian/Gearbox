application layout
  -template
  -universal();
  -moustache
canvas - sizing



--------------------------------------------------------
  var i = 0;
  var count = 0;
  var dataStable = 0;
  for (var x=start, ii=0; x<stop; x=x + dropDataPoints, ii=ii+1) {

    setTimeout(function () {
      while (i < i+50) { 
        count = count + data[start+i][0];
        i++
      } 
      dataStable; = count/50
------------------------------------------------------------------
FILE IMPORT**********************************
<!-- <form class='btn4 hide-this' id='upload-button' action="/csv-upload" method="post"> -->
      <!-- <input type='file' name='csv' accept='.csv'> -->
      <!-- <button class='btn4' type="submit" >Submit</button> -->
    <!-- </form> -->
------------------------------------------------------------------
SIDE EFFECT - STR8 LINE SCROLLING DOWN THE SCREEN 
function locationAndRouteModel(data, start, stop, multiX, multiY, multiZ, dropDataPoints, redline, latS, longS) {
  var latStart = latitudeStartingPoint(data, start, stop, multiX, multiY, multiZ, dropDataPoints, redline);
  var longStart = longitudeStartingPoint(data, start, stop, multiX, multiY, multiZ, dropDataPoints, redline);
  console.log(latStart);
  console.log(longStart);
  var canvas = document.getElementById('canvas-location');
  var ctx = canvas.getContext('2d');
  var int = 0;

  for (var x=start, ii=0; x<stop; x=x + dropDataPoints, ii=ii+1) {
    setTimeout(function () {
      ctx.canvas.width  = window.innerWidth;
      ctx.canvas.height = 800;//window.innerHeight;
      ctx.scale(1,1);
      ctx.translate(canvas.width/2, canvas.height/2);
        // ctx.rotate((Math.PI/180)*(data[start][0]*25));
        // ctx.strokeStyle="black";
        // ctx.lineWidth = 10;
        // ctx.beginPath(); ctx.arc(0, 0, 300, 300, Math.PI, true); ctx.stroke();//WHELL
        // ctx.lineWidth = 10;
        ctx.beginPath(); ctx.lineTo(-300,int); ctx.lineTo(300,int); ctx.stroke(); ctx.closePath();
        start += dropDataPoints;
        int += dropDataPoints;
      }, 2000+data[ii][31]*dropDataPoints);
  }

}
------------------------------------------------------------------
CONVERTING LOCATION POINTS TO WRITABLE FORMAT - JSBIN HOLD

arrLat = [];
arrLatLeft = [];
arrLatRight = [];
arrLong = [];
arrLongLeft = [];
arrLongRight = [];
arr1 = [91.3,39.99723,-105.30903,6596.8];

arrLat.push(arr1[1]);
arrLat = arrLat.join().split('.');
arrLatLeft.push(parseFloat(arrLat[0]));
arrLatRight.push(parseFloat("." + arrLat[1]));

console.log( (arrLatLeft - arrLatLeft) + (arrLatRight*100) );
// console.log( (arrLatRight*100) );

-------------------------------------------------------------------
//////////////////////////////////
// ctx.bezierCurveTo(88,96,87,99,87,101);
// ctx.quadraticCurveTo(20,250,250,620.50);
//TASK - IMPORT DATA CONVERSION
//HTML IMPOT METHOD

function movementXyz(data, start, stop, multiX, multiY, multiZ, dropDataPoints, redline) {
  var canvas = document.getElementById('canvas');
  var ctx = canvas.getContext('2d');
  var int = 0;
  var timer = 0;
  for (var x=start, ii=0; x<stop; x=x + dropDataPoints, ii=ii+1) {

    setTimeout(function () {
      ctx.canvas.width  = window.innerWidth;
        ctx.canvas.height = 800;//window.innerHeight;
        ctx.scale(1,1);
        ctx.translate(canvas.width/2, canvas.height/2);//DO PERCENTAGES FOR BALL
        ctx.rotate(data[start][1]/1);
        // ctx.lineWidth = 2;
        // ctx.beginPath(); ctx.lineTo(1000,0); ctx.lineTo(-1000,0); ctx.stroke(); ctx.closePath();//grid
        // ctx.beginPath(); ctx.lineTo(0,400); ctx.lineTo(0,-200); ctx.stroke(); ctx.closePath();

        if (data[start][3] > 1.1) {//LOUS MUSIC
          document.getElementById("text-div17").innerHTML = "- Consider turning your music down, at this voulme you may not be able to hear the horn of another car";
        }
        if (data[start][3] >= 1.2) {//BUMP
          ctx.fillStyle=("red");
          document.getElementById("text-div-bump").innerHTML =
          "- That was a " + data[start][3] + " hit, consider checking your car for damage";
        }
        if (data[start][3] <= 0) {//AIRBORNE - BRAKS ON CIRCLE GRAPHIC
          ctx.fillStyle=("red");
          document.getElementById("text-div-airborne").innerHTML =
          "- You are now airborne, goodnight";
        }

        if (data[start][1] >= redline) {//HARD LEFT
          ctx.fillStyle=("red");
          document.getElementById("text-div-hard-left").innerHTML =
          "- Very hard left turn. At " +
          data[start][1] +
          " times the force of gravity, you are risking loss of control: Time/DataPoint - " +
          data[start][0] + "sec/" + int;
          $('#text-div-good-driver').hide();
        }
        if (data[start][1] < -redline) {//HARD RIGHT
          ctx.fillStyle=("red");
          document.getElementById("text-div-hard-right").innerHTML =
          "- Very hard right turn. At " +
          data[start][1] +
          " times the force of gravity, you are risking loss of control: Time/DataPoint - " +
          data[start][0] + "sec/" + int;
          $('#text-div7').hide();
        }

        if (data[start][2] <= -redline) {//BRAKING
          ctx.fillStyle=("red");
          document.getElementById("text-div9").innerHTML =
          "- There was quite a heavy braking event at " +
          data[start][2] +
          " times the force of gravity: Time/DataPoint - " +
          data[start][0] + "sec/" + int;
        }
        if (data[start][2] > redline) {//ACCELERATION
          ctx.fillStyle=("red");
          document.getElementById("text-div21").innerHTML =
          "- There was quite a heavy acceleration event at " +
          data[start][2] +
          " times the force of gravity: Time/DataPoint - " +
          data[start][0] + "sec/" + int;
        }

        if (data[start][2] < -redline && data[start][1] > redline || data[start][2] < -redline && data[start][1] < -redline) {//HEAVY BRAKING
          ctx.fillStyle=("red");
          document.getElementById("text-div10").innerHTML =
          "***WARNING - USE MORE CAUTION: Heavy braking combined with hard cornering can easily cause you to lose control: Time/DataPoint - " +
          data[start][0] + "sec/" + int;
        }
        if (data[start][2] > redline && data[start][1] >= redline || data[start][2] > redline && data[start][1] < -redline) {//HEAVY ACCELERATION
          ctx.fillStyle=("red");
          document.getElementById("text-div22").innerHTML =
          "***WARNING - USE MORE CAUTION: Heavy acceleration combined with hard cornering can easily cause you to lose control: Time/DataPoint - " +
          data[start][0] + "sec/" + int;
        }

        ctx.fillStyle=("black");
        setTimeout(function() {
          document.getElementById("text-div-good-driver").innerHTML = "- So far, driver is doing well. No swerving, heavy braking/acceleration or aggressive turning has been detected.";
        }, 3000);

        if (data[start][2] > 1) {//CRASH AUTO CONTACT HELP************
          document.getElementById("text-div-crash").innerHTML =
          "***ACCIDENT WARNING: It seems that you may have been in an accident. If you press 'OK' you can ignore this message, otherwise your emergency contact will be notified by SMS";
        }


        if (data[start][1] >= redline || data[start][1] < -redline) { ctx.fillStyle=("red"); }
        if (data[start][2] >= redline || data[start][2] < -redline) { ctx.fillStyle=("red"); }
        else {ctx.fillStyle=("black");}
        if (data[start][3] > 0) {//PREVENTS Z CIRCLE FROM BREAKING ON AIRBORNE
          ctx.beginPath(); ctx.arc(0, 0, data[start][3]*multiZ*8, data[start][3]*multiZ*8, Math.PI, true); ctx.fill();//LARGE Z-CIRCLE
          ctx.fillStyle=("white");
          ctx.beginPath(); ctx.arc(0, 0, (data[start][3]*multiZ*8)-1, (data[start][3]*multiZ*8)-1, Math.PI, true); ctx.fill();//white
        }

        if (data[start][1] >= redline || data[start][1] < -redline) { ctx.fillStyle=("red"); }
        if (data[start][2] >= redline || data[start][2] < -redline) { ctx.fillStyle=("red"); }
        else {ctx.fillStyle=("black");}
        if (data[start][3] > 0) {//PREVENTS SMALL Z CIRCLE FROM BREAKING ON AIRBORNE  
          ctx.beginPath(); ctx.arc(0, 0, 2+data[start][3]*multiZ, 2+data[start][3]*multiZ, Math.PI, true); ctx.fill();//Z-CIRCLE
          ctx.fillStyle=("white");
          ctx.beginPath(); ctx.arc(0, 0, (2+data[start][3]*multiZ)-2, (2+data[start][3]*multiZ)-2, Math.PI, true); ctx.fill();//white
        }

        if (data[start][1] >= redline || data[start][1] < -redline) { ctx.fillStyle=("red"); }
        if (data[start][2] >= redline || data[start][2] < -redline) { ctx.fillStyle=("red"); }
        else {ctx.fillStyle=("black");}
        ctx.beginPath(); ctx.arc(data[start][1]*multiX, 0,10,10, Math.PI, true); ctx.fill();//G BALL X
        ctx.beginPath(); ctx.arc(0, data[start][2]*multiY,10,10, Math.PI, true); ctx.fill();//G BALL Y
        ctx.lineWidth = 1;

        if (data[start][1] >= redline || data[start][1] < -redline) { ctx.strokeStyle=("red"); }
        if (data[start][2] >= redline || data[start][2] < -redline) { ctx.strokeStyle=("red"); }
        else {ctx.strokeStyle=("black");}
        ctx.lineWidth = 2;
        ctx.beginPath(); ctx.lineTo(data[start][2]*multiY,-200); ctx.lineTo(-data[start][2]*multiY,-200);//EXPANDING Y
        ctx.stroke(); ctx.closePath();

        if (data[start][1] <= 0) {
          ctx.beginPath(); ctx.lineTo(-400, data[start][1]*multiX); ctx.lineTo(-400, -data[start][1]*multiX);//EXPANDING XL
          ctx.stroke(); ctx.closePath();
        } else {
          ctx.beginPath(); ctx.lineTo(400, -data[start][1]*multiX); ctx.lineTo(400, data[start][1]*multiX);//EXPANDING XR
          ctx.stroke(); ctx.closePath();
        }

        ctx.lineWidth = 2;
        ctx.strokeStyle = "black";
        ctx.beginPath(); ctx.lineTo(1000,0); ctx.lineTo(-1000,0); ctx.stroke(); ctx.closePath();//GRID
        ctx.beginPath(); ctx.lineTo(0,400); ctx.lineTo(0,-200); ctx.stroke(); ctx.closePath();

        start += dropDataPoints;
        int += dropDataPoints;
        timer += 8;

        if (data[start][1] > .05) { document.getElementById("text-div14").innerHTML = "Turning Left"; }
        else if (data[start][1] < -.05) { document.getElementById("text-div14").innerHTML = "Turning Right"; }
        else { document.getElementById("text-div14").innerHTML = "Driving Straight: "; }

        document.getElementById("text-div15").innerHTML = " and "

        if (-data[start][2] > redline) { document.getElementById("text-div16").innerHTML = "Braking Hard"; }//Y IS FLIPPED
        else if (-data[start][2] < -.3) { document.getElementById("text-div16").innerHTML = "Accelerating Quickly"; }//Y IS FLIPPED
        else if (-data[start][2] < -.05) { document.getElementById("text-div16").innerHTML = "Accelerating"; }//Y IS FLIPPED
        else if (-data[start][2] > .05) { document.getElementById("text-div16").innerHTML = "Braking"; }//Y IS FLIPPED
        else { document.getElementById("text-div16").innerHTML = "Coasting"; }


        //if DB level too loud - "consider turning down the stereo, st this volume you may not hear the horn of another car"
        document.getElementById("text-div1").innerHTML = "Time: " + data[start][0];
        document.getElementById("text-div2").innerHTML = "X:    " + data[start][1];
        document.getElementById("text-div3").innerHTML = "Y:    " + data[start][2];
        document.getElementById("text-div4").innerHTML = "Z:    " + data[start][3];
        document.getElementById("text-div5").innerHTML = "Data Points: " + int;
        document.getElementById("text-div17").innerHTML = "In Car Noise Level: " + Math.round(data[start][3]*100)/4; + "Db";
        document.getElementById("text-div6").innerHTML = highestAllAxesWithTime(data);//MAX AT TIME
    }, 2000+(ii+data[ii][0]*880) );//weird scope behavior inside setTimeout 'time' argument ii*data[ii][0]+10
}

}
$('#movement-xyz').on('click', function() {
  movementXyz(dataStandDrive, 0101, 15000, 300, 300, 20, 1, .7);//VIDEO ON DESKTOP
  // document.getElementById("text-div6").innerHTML = "Max: " + highestAllAxesWithTime(data);
});
-------------------------------
  <h4>
    Testing Zone:
    <button id='test-functions'>Test Functions</button>
    <button id='test-z'>Test Z Aixs</button>
    <button id='car-model'>Test Car Model</button>
    <button id='g-ball-test'>Test G Ball</button>
    <button id='g-ball-v-2'>gBallV2</button>
  </h4>
------------------------------
if (data[start][1] >= 0) {
ctx.beginPath(); ctx.lineTo(data[start][2]*multiY,-200); ctx.lineTo(-data[start][2]*multiY,-200);//EXPANDING Y
ctx.stroke(); ctx.closePath();
}	else {
ctx.beginPath(); ctx.lineTo(data[start][2]*multiY,200); ctx.lineTo(-data[start][2]*multiY,200);//EXPANDING Y
ctx.stroke(); ctx.closePath();
}
__________________________
// ctx.fillStyle=("black");
// ctx.beginPath(); ctx.arc(0, 0, data[start][3]*multiZ*8, data[start][3]*multiZ*8, Math.PI, true); ctx.fill();
// ctx.fillStyle=("white");
// ctx.beginPath(); ctx.arc(0, 0, (data[start][3]*multiZ*8)-1, (data[start][3]*multiZ*8)-1, Math.PI, true); ctx.fill();

_________________________________________
// ctx.fillStyle=("black");
// ctx.beginPath(); ctx.arc(0, 0, data[start][3]*multiZ*8, data[start][3]*multiZ*8, Math.PI, true); ctx.fill();
// ctx.fillStyle=("white");
_____________________________
var highestAllAxesWithTime = function(data) {//consoleXYZ with time
	var dataXYZ = [['X',0,0],['Y',0,0],['Z',0,0]];
	for (var i=0; i<data.length; i++) {
		setTimeout(function() {
		if (dataXYZ[0][2] < data[i][1]) { dataXYZ[0][2] = data[i][1]; dataXYZ[0][1] = data[i][0]; }
		else if (dataXYZ[1][2] < data[i][2]) { dataXYZ[1][2] = data[i][2]; dataXYZ[1][1] = data[i][0]; }
		else if (dataXYZ[2][2] < data[i][3]) { dataXYZ[2][2] = data[i][3]; dataXYZ[2][1] = data[i][0]; }
	document.getElementById("text-div6").innerHTML = "Max at Time: " + dataXYZ[0] + " /// " + dataXYZ[1] + " /// " + dataXYZ[2] + " /// ";
	} i+100);
	}
}
_____________________________
function gBallSeperateAxes(data, start, stop, multiX, multiY, dropDataPoints, multiTime) {
	var dataXYZ = [['X',0,0],['Y',0,0],['Z',0,0]];
	var canvas = document.getElementById('canvas');
	var ctx = canvas.getContext('2d');
	var int = 0;
	ctx.canvas.width  = window.innerWidth;
	ctx.canvas.height = window.innerHeight;
	ctx.translate(canvas.width/2, canvas.height/2);//DO PERCENTAGES FOR BALL
	ctx.scale(1,1);
	// ctx.beginPath();
	// ctx.strokeStyle=("black");
	// ctx.lineTo(100,0); ctx.lineTo(-50,0); ctx.stroke(); ctx.closePath(); ctx.beginPath();
	// ctx.lineTo(0,100); ctx.lineTo(0,-50); ctx.stroke(); ctx.closePath(); ctx.beginPath();
		for (var x=start, ii=0; x<stop; x=x + dropDataPoints, ii=ii+1) {
			setTimeout(function () {
				ctx.beginPath();
				ctx.strokeStyle=("black");
				ctx.lineTo(100,0); ctx.lineTo(-50,0); ctx.stroke(); ctx.closePath(); ctx.beginPath();
				ctx.lineTo(0,100); ctx.lineTo(0,-50); ctx.stroke(); ctx.closePath(); ctx.beginPath();

				ctx.beginPath();
				ctx.fillStyle=("white");
				ctx.arc(data[start][1]*multiX, 0,12,12, Math.PI, true);
				ctx.arc(0, data[start][2]*multiY,12,12, Math.PI, true);
				ctx.fill(); ctx.closePath();
				start += dropDataPoints;
				int += dropDataPoints;
				ctx.rotate(data[start][1]/-150);
				context.clearRect(0, 0, canvas.width, canvas.height);
			}, ii*data[ii][0]);

			setTimeout(function () {
				ctx.beginPath();
				ctx.strokeStyle=("white");
				ctx.lineTo(100,0); ctx.lineTo(-50,0); ctx.stroke(); ctx.closePath(); ctx.beginPath();
				ctx.lineTo(0,100); ctx.lineTo(0,-50); ctx.stroke(); ctx.closePath();

				ctx.beginPath();
				ctx.fillStyle=("black");
				ctx.arc(data[start][1]*multiX, 0,10,10, Math.PI, true);
				ctx.arc(0, data[start][2]*multiY,10,10, Math.PI, true);
				ctx.fill(); ctx.closePath();
				int += dropDataPoints;
			}, (ii+10)*data[ii][0]);
		}

		for (var i=0; i < data.length; i++) {
			setTimeout(function() {
				if (dataXYZ[0][2] < data[i][1]) { dataXYZ[0][2] = data[i][1]; dataXYZ[0][1] = data[i][0]; }
				if (dataXYZ[1][2] < data[i][2]) { dataXYZ[1][2] = data[i][2]; dataXYZ[1][1] = data[i][0]; }
				if (dataXYZ[2][2] < data[i][3]) { dataXYZ[2][2] = data[i][3]; dataXYZ[2][1] = data[i][0]; }
				document.getElementById("textDiv").innerHTML = dataXYZ;
			}, (ii+10)*data[ii][0]);
		}
}
$('#g-ball-seperate-axes').on('click', function() {
	gBallSeperateAxes(dataCanyonDown, 10000, 18000, 500, 100, 2, 1);
	highestAllAxesWithTime(dataCanyonDown);
});

//////////////////////////////////////////////////////////////////////////////////////////////

-----------------------------

// var div = document.getElementById("textDiv");
// div.textContent = "dataSpin3[15000][0]";
// var text = div.textContent;




-----------------------------


GBALL FIRST CIRCLE
setTimeout(function () {
  ctx.beginPath();
  ctx.fillStyle=("white");
  ctx.arc(data[start][1]*multiX, data[start][2]*multiY,12,12, Math.PI, true);
  ctx.fill(); ctx.closePath();
  start += dropDataPoints;
  int += dropDataPoints;
}, ii*data[ii][0]);
setTimeout(function () {
  ctx.beginPath();
  ctx.fillStyle=("black");
  ctx.arc(data[start][1]*multiX, data[start][2]*multiY,10,10, Math.PI, true);
  ctx.fill(); ctx.closePath();
  int += dropDataPoints;
}, (ii+100)*data[ii][0]);
-----------------------------
GBALL DANK
setTimeout(function () {
  ctx.beginPath();
  ctx.fillStyle=("white");
  ctx.fillRect(data[start][1]*multiX, data[start][2]*multiY,10,10);
  ctx.stroke(); ctx.closePath();
  start += dropDataPoints;
  int += dropDataPoints;
}, ii*data[ii][0]);
setTimeout(function () {
  ctx.beginPath();
  ctx.fillStyle=("black");
  ctx.fillRect(data[start][1]*multiX, data[start][2]*multiY,10,10);
  ctx.stroke(); ctx.closePath();
  int += dropDataPoints;
}, (ii+10)*data[ii][0]);
}
----------------
setTimeout(function () {
  ctx.beginPath();
  ctx.fillStyle=("white");
  ctx.beginPath();
  ctx.arc(data[start][1]*multiX, data[start][2]*multiY,10,10, Math.PI, true);
  ctx.fill(); ctx.closePath();
  start += dropDataPoints;
  int += dropDataPoints;
}, ii*data[ii][0]);
setTimeout(function () {
  ctx.beginPath();
  ctx.fillStyle=("black");
  ctx.arc(data[start][1]*multiX, data[start][2]*multiY,10,10, Math.PI, true);
  ctx.fill(); ctx.closePath();
  // ctx.fillRect(data[start][1]*multiX, data[start][2]*multiY,10,10);
  // ctx.stroke(); ctx.closePath();
  // int += dropDataPoints;
}, (ii+10)*data[ii][0]);
}v
----------------
var canvas = document.getElementById('canvas');
var ctx = canvas.getContext('2d');
var int = 0;
ctx.canvas.width  = window.innerWidth;
ctx.canvas.height = window.innerHeight;
ctx.translate(canvas.width/2, canvas.height/2);//DO PERCENTAGES FOR BALL
ctx.scale(1,-1);

  // for (var x=start, ii=0; x<stop; x=x + dropDataPoints, ii=ii+1) {
    // setTimeout(function () {
      // ctx.beginPath();
      ctx.lineWidth = 15;
      // ctx.lineTo(data[start][1]*multiX, data[start][2]*multiY);
      ctx.lineTo(0,0);
      ctx.lineTo(400,800);
      ctx.stroke();

      start += dropDataPoints;
      int += dropDataPoints;
    // }, data[ii][0]);
      // ctx.closePath();
  // }
----------------
<h2>1in1, dataOnTheY</h2>
  <div><a href="./data_plot.html">forceXTime(data, start, stop, multiX, multiY, dropDataPoints);</a></div>
  <div><a href="./data_plot.html">forceYTime(data, start, stop, multiX, multiY, dropDataPoints);</a></div>
  <div><a href="./data_plot.html">forceZTime(data, start, stop, multiX, multiY, dropDataPoints);</a></div>
  <div><a href="./data_plot.html">forceXTimeRedline(data, start, stop, multiX, multiY, dropDataPoints, redlineG) ;//logicForRedline</a></div>
<h2>1in1, dataXy</h2>
  <div><a href="./data_plot.html">forceXy(data, start, stop, multiX, multiY, dropDataPoints);</a></div>
  <div><a href="./data_plot.html">forceXyTime(data, start, stop, multiX, multiY, dropDataPoints);</a></div>
  <div><a href="./data_plot.html">forceXyTimeX(data, start, stop, multiX, multiY, dropDataPoints);</a></div>
<h2>3in1, dataXyzOnTheY</h2>
  <div><a href="./data_plot.html">forceXyzTimeXyz(data, start, stop, multiX, multiY, multiZ, multiTime, dropDataPoints);</a></div>
  <div><a href="./data_plot.html">forceXyzAdjustableTimeXyz(data, start, stop, multiX, multiY, multiZ, multiTime, dropDataPoints);</a></div>

----------------
//1in1, dataOnTheY
<div><a href="./data_plot.html">forceXTime(data, start, stop, multiX, multiY, dropDataPoints);</a></div>
<div><a href="./data_plot.html">forceYTime(data, start, stop, multiX, multiY, dropDataPoints);</a></div>
<div><a href="./data_plot.html">forceZTime(data, start, stop, multiX, multiY, dropDataPoints);</a></div>
<div><a href="./data_plot.html">forceXTimeRedline(data, start, stop, multiX, multiY, dropDataPoints, redlineG)</a></div>
//1in1, dataXy
<div><a href="./data_plot.html">forceXy(data, start, stop, multiX, multiY, dropDataPoints);</a></div>
<div><a href="./data_plot.html">forceXyTime(data, start, stop, multiX, multiY, dropDataPoints);</a></div>
<div><a href="./data_plot.html">forceXyTimeX(data, start, stop, multiX, multiY, dropDataPoints);</a></div>
// 3in1, dataXyzOnTheY
<div><a href="./data_plot.html">forceXyzTimeXyz(data, start, stop, multiX, multiY, multiZ, multiTime, dropDataPoints);</a></div>
<div><a href="./data_plot.html">forceXyzAdjustableTimeXyz(data, start, stop, multiX, multiY, multiZ, multiTime, dropDataPoints);</a></div>

-----------------
TIMEOUT

// $(document).ready(function() {
//
//   function nothing() {
//     ctx.beginPath();
//
//     for (i=2000; i < 2200; i++) {
//       setTimeout(function () {
//         ctx.lineTo(sData[i][1] * 1000, sData[i][2] * 500);
//         ctx.stroke();
//       }, sData[i][0]*1000);
//
//       console.log(sData[i][0]*300);
//     }
//     ctx.closePath();
//   }
//
// });
------------------------------------------------------
<canvas id="canvas" width='2000px' height='1000px'>
  <script>
  var canvas = document.getElementById('canvas');
  var ctx = canvas.getContext('2d');

  ctx.beginPath();
  for (var i=0; i < 1000; i=i+1) {

    ctx.lineTo(sData[i][1] * 500, sData[i][2] * 500);
    ctx.stroke();
  }
  ctx.closePath();
  </script>
</canvas>

<hr>

<canvas id="canvas2" width='2000px' height='1000px'>
  <script>
  var canvas = document.getElementById('canvas');
  var ctx = canvas.getContext('2d');

  ctx.beginPath();
  for (var i=0; i < 15000; i=i+10) {

    ctx.lineTo(sData[i][1] * 500, sData[i][2] * 500);
    ctx.stroke();
  }
  ctx.closePath();
  </script>
</canvas>

===============================================
function nothing() {
  ctx.beginPath();
  for (var i=8000; i < 8200; i=i+1) {

    setTimeout(function () {
      ctx.lineTo(sData[i][1] * 1000, sData[i][2] * 500);
      ctx.stroke();
    }, sData[i][0]);
    console.log(i);
  }
  ctx.closePath();
}
nothing();
